/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package projeto.gui;

import com.sun.org.apache.bcel.internal.generic.SWITCH;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import projeto.erro.GeralException;
import projeto.erro.RepositorioException;
import projeto.modelo.fachada.Fachada;
import projeto.modelo.to.*;

/**
 *
 * @author diego
 */
public class GuiNotaFiscal extends javax.swing.JDialog {
    
    
    private Fachada fachada = new Fachada();
    private NotaFiscal nf = new NotaFiscal();
    
    ArrayList<NotaFiscal_Produto> listaItens = null;
    /**
     * Creates new form GuiNotaFiscal
     */
    public GuiNotaFiscal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         setLocationRelativeTo(null);//mostra no centro da tela
         listarFuncionarios();//todos os funcionarios
         listarFormadePagamento();//todas as formas de pagamentos
         //Obter a data do sistema
         Date d = new Date();
          SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
          jlData.setText(f.format(d));
          //inserir a data na emissão na nota
          nf.setNotasFiscal_DataEmissao(d);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        JlNumeroNotaFiscal = new javax.swing.JLabel();
        jlData = new javax.swing.JLabel();
        JcNumeroNotaFiscal = new javax.swing.JTextField();
        JlCliente = new javax.swing.JLabel();
        JcCliente = new javax.swing.JTextField();
        JlCpfCnpj = new javax.swing.JLabel();
        JcCpfCnpj = new projeto.modelo.componente.SoNumero();
        JbConsultarCPFCNPJ = new javax.swing.JButton();
        jBIncluirNota = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jfuncionarioBox = new javax.swing.JComboBox();
        JlCliente1 = new javax.swing.JLabel();
        JcEndereco = new javax.swing.JTextField();
        JcNumeroRes = new javax.swing.JTextField();
        JlNumeroNotaFiscal1 = new javax.swing.JLabel();
        JlCliente2 = new javax.swing.JLabel();
        JcCidade = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jFormaPagamentoBox = new javax.swing.JComboBox();
        jBalteraNota = new javax.swing.JButton();
        jPItens = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaItens = new javax.swing.JTable();
        jPanalise = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLValorTotal = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jBcancelar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jBalterar = new javax.swing.JButton();
        jBIncluir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jBconfirmarCompra = new javax.swing.JButton();
        jBcancelarCompra = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nota Fiscal");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nota Fiscal"));

        JlNumeroNotaFiscal.setText("Número NF.:");

        jlData.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlData.setText("Data");

        JcNumeroNotaFiscal.setBackground(new java.awt.Color(204, 204, 204));
        JcNumeroNotaFiscal.setEditable(false);
        JcNumeroNotaFiscal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JcNumeroNotaFiscal.setEnabled(false);

        JlCliente.setText("Cliente/Razao Social.:");

        JcCliente.setBackground(new java.awt.Color(204, 204, 204));
        JcCliente.setEditable(false);
        JcCliente.setEnabled(false);

        JlCpfCnpj.setText("CPF/CNPJ.:");

        JcCpfCnpj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JcCpfCnpjKeyPressed(evt);
            }
        });

        JbConsultarCPFCNPJ.setText("Consultar");
        JbConsultarCPFCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbConsultarCPFCNPJActionPerformed(evt);
            }
        });

        jBIncluirNota.setText("Incluir Nota");
        jBIncluirNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIncluirNotaActionPerformed(evt);
            }
        });

        jLabel1.setText("Data.:");

        jLabel2.setText("Funcionário.:");

        JlCliente1.setText("Endereço.:");

        JcEndereco.setBackground(new java.awt.Color(204, 204, 204));
        JcEndereco.setEditable(false);
        JcEndereco.setEnabled(false);

        JcNumeroRes.setBackground(new java.awt.Color(204, 204, 204));
        JcNumeroRes.setEditable(false);
        JcNumeroRes.setEnabled(false);

        JlNumeroNotaFiscal1.setText("Número Res.:");

        JlCliente2.setText("Cidade.:");

        JcCidade.setBackground(new java.awt.Color(204, 204, 204));
        JcCidade.setEditable(false);
        JcCidade.setEnabled(false);

        jLabel8.setText("Forma de Pagamento.:");

        jBalteraNota.setText("Alterar Nota");
        jBalteraNota.setEnabled(false);
        jBalteraNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBalteraNotaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JlCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JlCpfCnpj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JcCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlData, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JlNumeroNotaFiscal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JcNumeroNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JbConsultarCPFCNPJ)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormaPagamentoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jfuncionarioBox, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JlCliente1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JcEndereco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JlNumeroNotaFiscal1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JcNumeroRes, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JlCliente2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JcCidade)
                                .addGap(215, 215, 215)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBIncluirNota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBalteraNota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jlData)
                    .addComponent(JlNumeroNotaFiscal)
                    .addComponent(JcNumeroNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jfuncionarioBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JlCpfCnpj)
                    .addComponent(JcCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JbConsultarCPFCNPJ)
                    .addComponent(jLabel8)
                    .addComponent(jFormaPagamentoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JcEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JlCliente1)
                            .addComponent(JlNumeroNotaFiscal1)
                            .addComponent(JcNumeroRes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JcCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JlCliente2)
                            .addComponent(jBalteraNota)))
                    .addComponent(jBIncluirNota))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPItens.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens..."));

        jTabelaItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Qtde", "Item", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTabelaItens.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTabelaItens);
        jTabelaItens.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItens.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItens.getColumnModel().getColumn(2).setResizable(false);

        jPanalise.setBorder(javax.swing.BorderFactory.createTitledBorder("Análise"));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Total.:");

        jLValorTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLValorTotal.setForeground(new java.awt.Color(0, 0, 153));
        jLValorTotal.setText("0,00");

        jBcancelar.setText("Cancelar");
        jBcancelar.setEnabled(false);
        jBcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelarActionPerformed(evt);
            }
        });

        jBalterar.setText("Alterar");
        jBalterar.setEnabled(false);
        jBalterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBalterarActionPerformed(evt);
            }
        });

        jBIncluir.setText("Incluir Produto");
        jBIncluir.setEnabled(false);
        jBIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIncluirActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Finalizar");

        jBconfirmarCompra.setText("Confirmar Compra");
        jBconfirmarCompra.setEnabled(false);
        jBconfirmarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBconfirmarCompraActionPerformed(evt);
            }
        });

        jBcancelarCompra.setText("Cancelar Compra");
        jBcancelarCompra.setEnabled(false);
        jBcancelarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelarCompraActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Movimentação");

        javax.swing.GroupLayout jPanaliseLayout = new javax.swing.GroupLayout(jPanalise);
        jPanalise.setLayout(jPanaliseLayout);
        jPanaliseLayout.setHorizontalGroup(
            jPanaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanaliseLayout.createSequentialGroup()
                .addGroup(jPanaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanaliseLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jBalterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBcancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanaliseLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(jPanaliseLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLValorTotal)
                                .addGap(49, 49, 49))))
                    .addGroup(jPanaliseLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addGroup(jPanaliseLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanaliseLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jBcancelarCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBconfirmarCompra))
                                .addGap(12, 12, 12)))))
                .addContainerGap())
        );
        jPanaliseLayout.setVerticalGroup(
            jPanaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanaliseLayout.createSequentialGroup()
                .addGroup(jPanaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLValorTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBIncluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBalterar)
                .addGap(4, 4, 4)
                .addComponent(jBcancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBconfirmarCompra)
                .addGap(18, 18, 18)
                .addComponent(jBcancelarCompra)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPItensLayout = new javax.swing.GroupLayout(jPItens);
        jPItens.setLayout(jPItensLayout);
        jPItensLayout.setHorizontalGroup(
            jPItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPItensLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanalise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPItensLayout.setVerticalGroup(
            jPItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPItensLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanalise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JbConsultarCPFCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbConsultarCPFCNPJActionPerformed
           // TODO add your handling code here:
       verificarCPFCNPJ();
    }//GEN-LAST:event_JbConsultarCPFCNPJActionPerformed

    private void jBIncluirNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIncluirNotaActionPerformed

        //Pega a seleção do Funcionário
        selecionadoFuncionario();
        //Pega a selação da Forma de pagamento
        selecionadoFormadePagamento();
        //chamar a fachada para salvar a nota Fiscal
        salvarNotaFiscal();
        
    }//GEN-LAST:event_jBIncluirNotaActionPerformed

    private void jBIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIncluirActionPerformed
        // TODO add your handling code here:
        GuiNotaFiscal_Produto guiNFP = new GuiNotaFiscal_Produto(null, rootPaneCheckingEnabled);
        guiNFP.jLNotaFiscal.setText(String.valueOf(nf.getNotasFiscal_Numero()));
        guiNFP.setVisible(true);
        
    }//GEN-LAST:event_jBIncluirActionPerformed

    private void jBalterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBalterarActionPerformed
        // TODO add your handling code here:
        
        try {
        
        GuiNotaFiscal_AlterarProduto guiNFAlteraProdu = new GuiNotaFiscal_AlterarProduto(null, rootPaneCheckingEnabled);
        
        //chama o metodo que pegar o item selecionado!
        NotaFiscal_Produto item = itemSelecionado();
        
        try{
        
        Produto pconsul = fachada.consultarProduto(item.getProduto().getProdutos_Descricao());//pesquisar pelo produto selecionado
        guiNFAlteraProdu.JcProdutoselecionado.setText(pconsul.getProdutos_Descricao());//jogar o produto selecionado
        Marca mconsul = fachada.consultarMarcas(pconsul.getMarcas_Codigo());//pesquisar pela marca do produto selecionado
        guiNFAlteraProdu.JcMarca.setText(mconsul.getMarcas_Descricao()); //jogar a marca do textfield
        guiNFAlteraProdu.jLNotaFiscalalt.setText(JcNumeroNotaFiscal.getText()); //joga o número da nota fiscal
        
        //jogar o codigo do produto e da nota fiscal para o objeto na gui que será aberta
        guiNFAlteraProdu.nfpAlterar.setProdutos_Codigo(pconsul.getProdutos_Codigo());
        guiNFAlteraProdu.nfpAlterar.setNotasFiscal_Numero(nf.getNotasFiscal_Numero());
        guiNFAlteraProdu.nfpAlterar.setNotasFiscalProdutos_Quantidade(item.getNotasFiscalProdutos_Quantidade());
        
        //CHAMA A TELA PARA ALTERA O QUANTIDADE DO PRODUTO
        guiNFAlteraProdu.setVisible(true);
        
        }catch (GeralException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        }catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(null, "Selecione o item desejado!");
        }
         
    }//GEN-LAST:event_jBalterarActionPerformed

    private void jBcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelarActionPerformed
        // TODO add your handling code here:
         int resposta;

        try {
            //chama o metodo que pegar o item selecionado!
            NotaFiscal_Produto item = itemSelecionado();

            resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente cancelar o Produto ?", "", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                
                NotaFiscal_Produto nfExcluir = new NotaFiscal_Produto();//criei o objeto apra armazenar os dados do item que seré excluido
                
                //consulta a descrição do produto selecionado
                Produto pconsul = fachada.consultarProduto(item.getProduto().getProdutos_Descricao());
                
                nfExcluir.setNotasFiscal_Numero(nf.getNotasFiscal_Numero());
                nfExcluir.setProdutos_Codigo(pconsul.getProdutos_Codigo());
                nfExcluir.setNotasFiscalProdutos_Quantidade(item.getNotasFiscalProdutos_Quantidade());
                nfExcluir.setNotasFiscalProdutos_ValorQuantidade(item.getNotasFiscalProdutos_ValorQuantidade());
                
                

                if (pconsul != null) {       //seta o codigo do produto selecionado da consulta
                    fachada.excluirNotaFiscal_Produto(nfExcluir);
                }
            }
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(null, "Selecione o produto!");
        } catch (GeralException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jBcancelarActionPerformed

    private void jBconfirmarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBconfirmarCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBconfirmarCompraActionPerformed

    private void jBcancelarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelarCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBcancelarCompraActionPerformed

    private void JcCpfCnpjKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JcCpfCnpjKeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificarCPFCNPJ();
        }
    }//GEN-LAST:event_JcCpfCnpjKeyPressed

    private void jBalteraNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBalteraNotaActionPerformed
        // TODO add your handling code here:

        //Pega a seleção do Funcionário
        selecionadoFuncionario();
        //Pega a selação da Forma de pagamento
        selecionadoFormadePagamento();
        
        //altera dados na Nota Fiscal
        try{
        fachada.alterarNotaFiscal(nf);
        }catch (GeralException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jBalteraNotaActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        listarProdutodaNF();
        
        //ATUALIZAR O VALOR TOTAL DA NOTA SE CASO A NOTA FOR INICIADA
        if(!JcNumeroNotaFiscal.getText().equals("")){
           
            valorTotal();
        }
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                GuiNotaFiscal dialog = new GuiNotaFiscal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JbConsultarCPFCNPJ;
    private javax.swing.JTextField JcCidade;
    private javax.swing.JTextField JcCliente;
    private javax.swing.JTextField JcCpfCnpj;
    private javax.swing.JTextField JcEndereco;
    private javax.swing.JTextField JcNumeroNotaFiscal;
    private javax.swing.JTextField JcNumeroRes;
    private javax.swing.JLabel JlCliente;
    private javax.swing.JLabel JlCliente1;
    private javax.swing.JLabel JlCliente2;
    private javax.swing.JLabel JlCpfCnpj;
    private javax.swing.JLabel JlNumeroNotaFiscal;
    private javax.swing.JLabel JlNumeroNotaFiscal1;
    private javax.swing.JButton jBIncluir;
    private javax.swing.JButton jBIncluirNota;
    private javax.swing.JButton jBalteraNota;
    private javax.swing.JButton jBalterar;
    private javax.swing.JButton jBcancelar;
    private javax.swing.JButton jBcancelarCompra;
    private javax.swing.JButton jBconfirmarCompra;
    private javax.swing.JComboBox jFormaPagamentoBox;
    private javax.swing.JLabel jLValorTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPItens;
    private javax.swing.JPanel jPanalise;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTabelaItens;
    private javax.swing.JComboBox jfuncionarioBox;
    private javax.swing.JLabel jlData;
    // End of variables declaration//GEN-END:variables
   
    //LISTAR OS FUNCIONARIOS
    private void listarFuncionarios(){
        //LISTA Funcionarios
       Funcionario fu;
       ArrayList<Funcionario> listasg;
	try{
		//Lista dos os segmentos
		listasg = (ArrayList<Funcionario>)fachada.listarTodosFuncionario();
		for(Iterator<Funcionario> it = listasg.iterator(); it.hasNext();){
                    fu = it.next();
                    jfuncionarioBox.addItem(fu.getFuncionarios_Nome());	
		}
	}catch (GeralException ex){
		JOptionPane.showMessageDialog(null, ex.getMessage());
	}
    }
    
    //LISTAR FORMA DE PAGAMENTO
    private void listarFormadePagamento(){
         //LISTA Forma de Pagamentos
       FormaPagamento fp;
       ArrayList<FormaPagamento> listasg;
	try{
		//Lista dos os segmentos
		listasg = (ArrayList<FormaPagamento>)fachada.listarFormasPagamentos();
		for(Iterator<FormaPagamento> it = listasg.iterator(); it.hasNext();){
                    fp = it.next();
                    jFormaPagamentoBox.addItem(fp.getFormaPagamento_Descricao());	
		}
	}catch (GeralException ex){
		JOptionPane.showMessageDialog(null, ex.getMessage());
	}
    }
    
    //SELECIONAR Funcionario
    private void selecionadoFuncionario(){
         try {
            Funcionario fu = fachada.consultarFuncionario((String) jfuncionarioBox.getSelectedItem());
            nf.setFuncionarios_Codigo(fu.getFuncionarios_Codigo());
        } catch (GeralException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    
    //PEGAR O BOX QUE ESTIVER SELECIONADO
    private void selecionadoFormadePagamento(){
          try {
            FormaPagamento fp = fachada.consultarFormaPagamento((String) jFormaPagamentoBox.getSelectedItem());
            nf.setFormasPagamento_Codigo(fp.getFormaPagamento_Codigo());
        } catch (GeralException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    
    //PEGAR O CODIGO E AUTO PREENCHER OS CAMPOS DO PF E PJ
    private void verificarCPFCNPJ(){
         
        //CPF quantidade de digitos
        if(JcCpfCnpj.getText().length() == 11){
        
        try {
            PessoaFisica pf = fachada.consultarPF_CPF(JcCpfCnpj.getText());
            nf.setClientes_Codigo(pf.getClientes_Codigo());
            //preencher os campos no cliente
            JcCliente.setText(pf.getPessoasFisica_Nome());
            JcEndereco.setText(pf.getEndereco().getEnderecos_Logradouro());
            JcNumeroRes.setText(pf.getClientes_NumeroResidencia());
            JcCidade.setText(pf.getEndereco().getCidade().getCidades_Nome());
            
        } catch (GeralException ex) {
           JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
        //CNPJ quantidade de digitos
        }else if(JcCpfCnpj.getText().length() == 14){
        
        try{
            PessoaJuridica pj = fachada.consultaPJ_CNPJ(JcCpfCnpj.getText());
            nf.setClientes_Codigo(pj.getClientes_Codigo());
            //preencher os campos no cliente
            JcCliente.setText(pj.getPessoasJuridica_RazaoSocial());
            JcEndereco.setText(pj.getEndereco().getEnderecos_Logradouro());
            JcNumeroRes.setText(pj.getClientes_NumeroResidencia());
            JcCidade.setText(pj.getEndereco().getCidade().getCidades_Nome());

        } catch (GeralException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
            
        }else{
            JOptionPane.showMessageDialog(null,"O informado não é um CPF ou CNPJ valido!");
        }
    }
    
    //SALVAR NOTA FISCAL
    private void salvarNotaFiscal(){
        try {  
            //SALVAR A NOTA FISCAL
            fachada.salvar(nf);

        } catch (GeralException ex) {
          JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
        try{
            
            if(nf.getClientes_Codigo() > 0){ //se exitir um cliente informado
                
           //pegar a nota cadastrada
           NotaFiscal nfNova = fachada.consultarUltimaNovaCliente(nf.getClientes_Codigo());
          
           //setar o numero na nota gerada no textfielNumero da Nota
           JcNumeroNotaFiscal.setText(String.valueOf(nfNova.getNotasFiscal_Numero()));
           nf.setNotasFiscal_Numero(nfNova.getNotasFiscal_Numero());//setar o numero no objeto Nota Fiscal
            
           //metodo para habilita e desabilitar alguns botões expecificos
           desabHabilite();
          }
           
        }catch (GeralException ex) {
          JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    
    //DESABILITAR E HABILITAR BOTÕES ESPECIFICOS PARA QUANDO SALVAR A NOTA!
    private void desabHabilite(){
         //desabilidata os botões para focar na nova nota fiscal
           jBIncluirNota.setEnabled(false);
           
           //abilitar os botões do painel análise
           jBIncluir.setEnabled(true);
           jBalterar.setEnabled(true);
           jBcancelar.setEnabled(true);
           jBconfirmarCompra.setEnabled(true);
           jBcancelarCompra.setEnabled(true);
           jBalteraNota.setEnabled(true);
    }
    
    //MODELO DA TABELA DE ITEM DA NOTA FISCAL
    private DefaultTableModel geramodelo(ArrayList<NotaFiscal_Produto> listaItens) {
    DefaultTableModel modelo = new DefaultTableModel(new Object[]{"Qtde","Item","Valor"},0){

        public boolean isCellEditable(int rowIndex, int mColIndex) {
            return false;
        }
    };
    // modelo.addColumn("Qtde");
    //modelo.addColumn("Item");
    //modelo.addColumn("Valor");
    
    ArrayList<String> valores;
    int i = 0;
    for (NotaFiscal_Produto nfp : listaItens) {
        valores = new ArrayList<String>();
        valores.add(Integer.toString(nfp.getNotasFiscalProdutos_Quantidade()));
        valores.add(nfp.getProduto().getProdutos_Descricao());
        //recebe a conversão de double para string incluindo no formato Moeda
        String valorVenda = formaMoeda(nfp.getNotasFiscalProdutos_ValorQuantidade());
        valores.add(valorVenda);
        modelo.insertRow(i, valores.toArray());
        i++;
    }
    return modelo;
    }
    
    //FORMATA O VALOR PARA VALOR REAL
    private String formaMoeda (double valorMoeda){
        java.text.DecimalFormat df = new java.text.DecimalFormat("###,###,##0.00");
        return df.format(valorMoeda);
    }
    
    //LISTAR TODOS OS PRODUTOS DA NOTA FISCAL
    public void listarProdutodaNF(){
         try{
            listaItens = (ArrayList<NotaFiscal_Produto>)fachada.listaProdutosNotaFiscal_Produto(nf.getNotasFiscal_Numero());
        } catch (GeralException ex){
                JOptionPane.showMessageDialog(null, ex.getMessage());
        }
          DefaultTableModel modelo = geramodelo(listaItens);
          jTabelaItens.setModel(modelo); 
    }
    
    //OBTER O VALOR TOTAL DA NOTA!
    private void valorTotal(){
        try{
        NotaFiscal valornf = fachada.consultar(nf.getNotasFiscal_Numero());
        
        //recebe a conversão de double para string incluindo no formato Moeda
        String valorVenda = formaMoeda(valornf.getNotasFiscal_ValorNotaFiscal());
        jLValorTotal.setText( valorVenda);
        
        }catch (GeralException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    
      //PEGAR OS DADOS DO ITEM SELECIONADO
      private NotaFiscal_Produto itemSelecionado(){
        NotaFiscal_Produto nfp = listaItens.get(jTabelaItens.getSelectedRow());
        return nfp;
    }
      
    
//fim
}
